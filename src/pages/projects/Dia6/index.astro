---
import LayoutProyecto from "../../../layouts/LayoutProyecto.astro";
---

<LayoutProyecto title="DÃ­a 6" subtitle="Scroll animation">
  <div class="container">
    <h3>Scroll to see the animation</h3>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
    <article class="card">Content</article>
  </div>
</LayoutProyecto>

<style>
    .container {
    background-color: #efedd6 ;
    display: flex;
    flex-direction: column;
    height: 71vh;
    overflow-y: scroll;
    gap: 10px;
    text-align: center;
    overflow-x: hidden;
    position: relative;
    width: 500px;
  }
  h3 {
    color: var(--text-color);
    font-weight: bolder;
    font-size: x-large;
    padding: 0.7rem;
  }

  .card {
    background-color: var(--celeste);
    color: #fff;
    display: grid;
    place-items: center;
    min-height: 200px;
    width: 400px;
    font-size: x-large;
    font-weight: bolder;
    border-radius: 12px;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
    margin: 0 auto;
    position: relative;
    transition: all 0.5s ease-in-out;
  }
  .card:nth-child(odd) {
    left: -77%;
    opacity: 0; 
  }

  .card:nth-child(even) {
    left: 77%;
    opacity: 0; 
  }  
  
  .card.show {
    left: 0;
    opacity: 1;
  }

  @media (max-width: 500px) {
    .card
    {
      width: 300px;
    }

    .container {
      width: 450px;
    }
    }

</style>

<script>
  document.addEventListener("astro:page-load", () => {

    // Crear el observador con una callback y opciones
    const observer = new IntersectionObserver((entries, observer) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.classList.add('show');
    } else {
      const boundingClientRect = entry.boundingClientRect;
      if (boundingClientRect.bottom > window.innerHeight) {
        entry.target.classList.remove('show');
      }
    }
  });
}, { threshold: 0.1 });

    const cards = document.querySelectorAll('.card');

    // Empezar a observar cada elemento
    cards.forEach(card => {
      observer.observe(card);
    });
  });
</script>