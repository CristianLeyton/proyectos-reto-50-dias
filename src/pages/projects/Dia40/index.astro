---
import LayoutProyecto from "../../../layouts/LayoutProyecto.astro";
---

<LayoutProyecto title="DÃ­a 40" subtitle="3d Background Boxes">
  <div class="container dia40">
    <button class="buttonMagic">
      Magic
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        style="fill: currentColor;transform: ;msFilter:;"
        ><path
          d="m11 4-.5-1-.5 1-1 .125.834.708L9.5 6l1-.666 1 .666-.334-1.167.834-.708zm8.334 10.666L18.5 13l-.834 1.666-1.666.209 1.389 1.181L16.834 18l1.666-1.111L20.166 18l-.555-1.944L21 14.875zM6.667 6.333 6 5l-.667 1.333L4 6.5l1.111.944L4.667 9 6 8.111 7.333 9l-.444-1.556L8 6.5zM3.414 17c0 .534.208 1.036.586 1.414L5.586 20c.378.378.88.586 1.414.586s1.036-.208 1.414-.586L20 8.414c.378-.378.586-.88.586-1.414S20.378 5.964 20 5.586L18.414 4c-.756-.756-2.072-.756-2.828 0L4 15.586c-.378.378-.586.88-.586 1.414zM17 5.414 18.586 7 15 10.586 13.414 9 17 5.414z"
        ></path></svg
      >
    </button>

    <div class="bigBox">

    </div>
  </div>
</LayoutProyecto>

<style is:inline>
  .dia40 {
    min-height: 70vh;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  .buttonMagic {
    display: flex;
    gap: 10px;
    background-color: var(--naranja-claro);
    color: #fff;
    width: fit-content;
    padding: 10px 15px;
    border-radius: 10px;

    &:active {
      transform: scale(0.95);
    }
  }

  .bigBox {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    transition: all 0.3s linear;
    width: 500px;
    height: 500px;
  }

  .box {
    width: 125px;
    height: 125px;
    position: relative;
    transform: rotateZ(0deg);
    transition: transform 0.3s ease-in;
    background-repeat: no-repeat;
    background-size: 500px 500px;

    &::before {
      content: "";
      position: absolute;
      width: 125px;
      height: 20px;
      background-color: var(--naranja-claro);
      transform: translateY(125px) translateX(10px) skewX(45deg);
    }

    &::after {
      content: "";
      position: absolute;
      width: 20px;
      height: 125px;
      background-color: var(--naranja-muy-claro);
      transform: translateX(125px) translateY(10px) skewY(45deg);
    }
  }

  .openBox {
    width: 600px;
    height: 600px;
  }

  .rotateOpen {
    animation: rotateOpen 0.4s both;
  }

  .rotateClose {
    animation: rotateClose 0.4s both;
  }

  @keyframes rotateOpen {
    from {
      transform: rotateZ(0deg);
    }

    to {
      transform: rotateZ(360deg);
    }
  }

  @keyframes rotateClose {
    from {
      transform: rotateZ(360deg);
    }

    to {
      transform: rotateZ(0deg);
    }
  }

  @media (max-width: 600px) {
  }

</style>


<script>

import imageMinion from './minions.webp';

  document.addEventListener("astro:page-load", () => {
    const magicBtn = document.querySelector(".buttonMagic");
    const bigBox = document.querySelector(".bigBox");

    function createBoxes() {
      for (let i = 0; i < 4; i++) {
        for (let j = 0; j < 4; j++) {
          const box = document.createElement("div");
          box.classList.add("box");
          box.classList.add("rotateClose");
          box.style.backgroundImage = `url(${imageMinion.src})`
          box.style.backgroundPosition = `${-j * 125}px ${-i * 125}px`;
          bigBox.appendChild(box);
        }
      }
    }

    createBoxes();

    magicBtn.addEventListener("click", () => {
      const boxes = document.querySelectorAll(".box");
      bigBox.classList.toggle("openBox");

      boxes.forEach((box) => {
        box.classList.toggle("rotateOpen");
        box.classList.toggle("rotateClose");
      });
    });
  });
</script>
