---
import LayoutProyecto from "../../../layouts/LayoutProyecto.astro";
---

<LayoutProyecto title="DÃ­a 8" subtitle="Form Wave">
  <div class="container containerForm">
    <form action="">
      <h1>Please Login</h1>

      <div class="user-box">
        <input id="user" type="text" required autocomplete="off" />
        <label class="user-placeholder">Email</label>
      </div>
      <div class="password-box">
        <input id="password" type="password" required />
        <label class="password-placeholder">Password</label>
      </div>
      <button>Login</button>
      <p>Don't have an account? <a href="#">Register</a></p>
    </form>
  </div>
</LayoutProyecto>

<style is:inline>
  
  .containerForm {
    display: grid;
    min-height: 70vh;
    background-color: var(--celeste-claro);
    place-items: center;
  }

  .containerForm form{
    padding: 2rem;
    display: flex;
    flex-direction: column;
    background-color: var(--celeste);
    color: #fff;
    align-items: center;
    border-radius: 0.4rem;
    gap: 2rem;
    width: 450px;
  }

  .containerForm h1 {
    font-size: xx-large;
    font-weight: bold;
  }
  .containerForm input {
    background-color: transparent;
    border-bottom: 2px solid var(--azul-oscuro);
    outline: none;
    padding: 0.5rem 0;
    width: 100%;
    z-index: 1;
  }

  .user-box,
  .password-box {
    width: 100%;
  }

  .containerForm input:focus {
    border-bottom: 2px solid #fff;
  }

  .containerForm label {
    transition: all 0.3s ease-in-out;
    color: var(--azul-oscuro);
    user-select: unset;
    z-index: -1;
  }

  .containerForm button {
    background: var(--azul-oscuro);
    padding: 10px 0px;
    width: 100%;
    font-weight: bold;
  }
  .containerForm button:active {
    transform: scale(0.98);
  }

  .containerForm p {
    font-size: small;
    text-align: left;
    width: 100%;
  }
  .containerForm a {
    color: var(--azul-oscuro);
    font-weight: bold;
  }

  .letter {
    position: relative;
    top: -2rem;
    transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .wave {
    top: -4rem;
    color: #fff;
  }

  /* Cuando el input tiene un valor valido, dejo a las letras arriba, en su lugar */ 
  .containerForm input:valid + label span  {
    top: -4rem;
    color: #fff;
  }
  @media (max-width: 500px) {
    .containerForm form {
      width: 310px;
    }
  }
</style>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const inputPass = document.querySelector("#password");
    const inputUser = document.querySelector("#user");
    const labelPass = document.querySelector(".password-placeholder");
    const labelUser = document.querySelector(".user-placeholder");

    const labels = document.querySelectorAll("label");

    labels.forEach((label) => {
      let text = label.textContent.split("");
      label.innerHTML = "";
      text.forEach((letter, i) => {
        const span = document.createElement("span");
        span.innerText = letter;
        span.setAttribute(
          "style",
          `transition-delay: ${i * 0.05}s;`
        );
        span.classList.add('letter')
        label.appendChild(span);
      });
    });


    //Animar user 
    if (inputUser) {
      inputUser.addEventListener('focus', () => {
      for (let i = 0; i < labelUser.children.length; i++) {
        labelUser.children[i].classList.add('wave');
      }
    }); 

    inputUser.addEventListener('blur', () => {
      for (let i = 0; i < labelUser.children.length; i++) {
        labelUser.children[i].classList.remove('wave');
      }
    }); 

    labelUser.addEventListener('click', () => {
      inputUser.focus();
    });
  }

    //Animar password
    if (inputPass) {
      inputPass.addEventListener('focus', () => {
      for (let i = 0; i < labelPass.children.length; i++) {
        labelPass.children[i].classList.add('wave');
      }
    }); 

    inputPass.addEventListener('blur', () => {
      for (let i = 0; i < labelPass.children.length; i++) {
        labelPass.children[i].classList.remove('wave');
      }
    }); 
    }


    if (labelPass) {
      labelPass.addEventListener('click', () => {
      inputPass.focus();
    })
    }

    
    
  });
</script>
